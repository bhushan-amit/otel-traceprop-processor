receivers:
  otlp:
    # https://github.com/open-telemetry/opentelemetry-collector/tree/main/receiver/otlpreceiver# https://github.com/open-telemetry/opentelemetry-collector/tree/main/receiver/otlpreceiver
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318
        cors:
          allowed_origins:
            - "*"

processors:
  tracepropagator: {}

exporters:
  debug:
    verbosity: detailed
  otlphttp/grafana_cloud:
    endpoint: "https://otlp-gateway-prod-ap-south-1.grafana.net/otlp"
    auth:
      authenticator: basicauth/grafana_cloud

extensions:
  basicauth/grafana_cloud:
    client_auth:
      username: "1185879"
      password: "glc_eyJvIjoiMTM2MjgwNSIsIm4iOiJzdGFjay0xMTg1ODc5LW90bHAtd3JpdGUtY29sbGVjdG9yX2xvY2FsIiwiayI6IlkyVHExN3E4NDd4T2ZSOVRSTzI1S0kzZSIsIm0iOnsiciI6InByb2QtYXAtc291dGgtMSJ9fQ=="

connectors:
  grafanacloud:
    host_identifiers: ["host.name"]
  spanmetrics:
    histogram:
      explicit:
        buckets: [100us, 1ms, 2ms, 6ms, 10ms, 100ms, 250ms]
    dimensions:
      - name: http.request.method
        default: GET
      - name: http.response.status_code
      - name: host.name
      - name: http.route
      - name: TraceParentName
        default: NOT_FOUND
    exemplars:
      enabled: true
    dimensions_cache_size: 1000
    aggregation_temporality: "AGGREGATION_TEMPORALITY_CUMULATIVE"
    metrics_flush_interval: 15s
    metrics_expiration: 5m
    events:
      enabled: true
      dimensions:
        - name: exception.type
        - name: exception.message
    resource_metrics_key_attributes:
      - service.name
      - telemetry.sdk.language
      - telemetry.sdk.name


service:
  extensions:
    [
      basicauth/grafana_cloud
    ]
  pipelines:
    traces:
      receivers: [otlp]
      processors: [tracepropagator]
      exporters: [debug, otlphttp/grafana_cloud, spanmetrics, grafanacloud]

    metrics/grafanacloud:
      receivers: [ grafanacloud, spanmetrics ]
      exporters: [ otlphttp/grafana_cloud ]